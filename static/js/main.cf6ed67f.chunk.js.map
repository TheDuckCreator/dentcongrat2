{"version":3,"sources":["assets/FirebaseConfig.js","assets/Content.js","assets/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","database","Content","props","state","code","name","photo","congratText","this","ref","on","snapshot","fetchName","val","fetchPhoto","fetchCongratText","setState","class","src","className","Component","Footer","href","title","rel","App","onChange","e","target","value","console","log","show","onCodeSubmit","user","preventDefault","congratContent","onSubmit","type","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf6ed67f.chunk.js","sourcesContent":["const firebaseConfig = {\n  apiKey: \"AIzaSyCtjIqTScn4AVK3Ghb2BL1wlVqje_jWPHw\",\n  authDomain: \"med44congrat.firebaseapp.com\",\n  databaseURL: \"https://med44congrat.firebaseio.com\",\n  projectId: \"med44congrat\",\n  storageBucket: \"med44congrat.appspot.com\",\n  messagingSenderId: \"578165062765\",\n  appId: \"1:578165062765:web:89760e3c2aab061e745364\"\n}\nexport default firebaseConfig\n","import React, { Component } from \"react\"\nimport firebase from \"firebase\"\nimport firebaseConfig from \"./FirebaseConfig\"\nfirebase.initializeApp(firebaseConfig)\nlet database = firebase.database()\nclass Content extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      code: this.props.code,\n      name: \"\",\n      photo: \"\",\n      congratText: \"\"\n    }\n  }\n\n  componentDidMount() {\n    let code = this.state.code\n    let congrat = database.ref(\"/dentcongrat/friend/\" + code)\n    congrat.on(\"value\", snapshot => {\n      let fetchName = snapshot.val() && snapshot.val().name\n      let fetchPhoto = snapshot.val() && snapshot.val().photo\n      let fetchCongratText = snapshot.val() && snapshot.val().congratText\n      this.setState({\n        name: fetchName,\n        photo: fetchPhoto,\n        congratText: fetchCongratText\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <img\n          class=\"img-fluid icon-1 piccenter\"\n          src=\"https://firebasestorage.googleapis.com/v0/b/med44congrat.appspot.com/o/toothache.png?alt=media&token=3592cadd-8a8f-47c8-b99a-7d3c11ff31f4\"\n        />\n        <h1 className=\"acenter kanit text-uppercase\">Congratulation</h1>\n        <h2 className=\"acenter kanit  \">{this.state.name}</h2>\n        <img className=\"img-fluid piccenter icon-2\" src={this.state.photo} />\n        <br />\n        <h5 className=\"kanitlight acenter\"> {this.state.congratText}</h5>\n\n        <p className=\"kanit acenter\"> ติน A-Intania 50 / CoE'28</p>\n\n        <p className=\"kanitlight acenter \">\n          PSU Dentistry'34 Gown Ceremony <br /> 26 October 2019{\" \"}\n        </p>\n      </div>\n    )\n  }\n}\nexport default Content\n","import React, { Component } from \"react\"\nclass Footer extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"kanitlight white acenter\">\n          <div>\n            Icons made by -\n            <a\n              href=\"https://www.flaticon.com/authors/nikita-golubev\"\n              title=\"Nikita Golubev\"\n              className=\"text-light\"\n            >\n              Nikita Golubev\n            </a>\n            - from -\n            <a\n              href=\"https://www.flaticon.com/\"\n              className=\"text-light\"\n              title=\"Flaticon\"\n            >\n              www.flaticon.com\n            </a>\n          </div>\n          <div>\n            Icons made by{\" \"}\n            <a\n              href=\"https://www.flaticon.com/authors/freepik\"\n              className=\"text-light\"\n              title=\"Freepik\"\n            >\n              Freepik\n            </a>{\" \"}\n            from{\" \"}\n            <a\n              href=\"https://www.flaticon.com/\"\n              className=\"text-light\"\n              title=\"Flaticon\"\n            >\n              www.flaticon.com\n            </a>\n          </div>{\" \"}\n          <br />\n          Made with Love By Tin and{\" \"}\n          <a href=\"https://www.theduckcreator.in.th\" className=\"text-light\">\n            TDC\n          </a>\n          <br />\n          ผลงานนี้ ใช้\n          <a\n            rel=\"license\"\n            className=\"text-light\"\n            href=\"http://creativecommons.org/licenses/by/4.0/\"\n          >\n            สัญญาอนุญาตของครีเอทีฟคอมมอนส์แบบ แสดงที่มา 4.0 International\n          </a>\n          .\n        </p>\n      </div>\n    )\n  }\n}\nexport default Footer\n","import React, { Component } from \"react\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"./App.css\"\nimport \"fontawesome\"\nimport Content from \"./assets/Content\"\nimport Footer from \"./assets/Footer\"\nimport \"./assets/main.css\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      code: \"\",\n      show: false\n    }\n  }\n\n  onChange = e => {\n    const { name, value } = e.target\n    console.log(\"Name \" + name + \"Code \" + value)\n    this.setState({\n      code: value,\n      show: false\n    })\n  }\n\n  onCodeSubmit = user => {\n    user.preventDefault()\n    this.setState({\n      show: true\n    })\n  }\n\n  render() {\n    let congratContent\n    if (this.state.show == true) {\n      congratContent = (\n        <div>\n          {\" \"}\n          <Content code={this.state.code} />\n        </div>\n      )\n    } else {\n      congratContent = \"\"\n    }\n\n    return (\n      <div className=\"container\">\n        <div>\n          <br />\n          <h3 className=\"kanit white acenter\">Dent'34 Congratulation</h3>\n          <h5 className=\"kanitlight white acenter\">\n            Enter Your Code <br />\n            <div className=\"col-sm-6 piccenter\">\n              <form onSubmit={this.onCodeSubmit}>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"redeem-code\"\n                  onChange={this.onChange}\n                ></input>\n                <br />\n                <button class=\"btn btn-light kanitlight\" type=\"submit\">\n                  Activate\n                </button>\n                <hr />\n              </form>\n            </div>\n          </h5>\n        </div>\n        {congratContent}\n        <Footer />\n      </div>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}